// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Numployable.Persistence;

#nullable disable

namespace Numployable.Persistence.Migrations
{
    [DbContext(typeof(NumployableDbContext))]
    partial class NumployableDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Numployable.Persistence.Model.Commute", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(10) unsigned");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Description" }, "Commute_UNIQUE")
                        .IsUnique();

                    b.ToTable("Commute");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "On-site"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Remote"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Hybrid"
                        });
                });

            modelBuilder.Entity("Numployable.Persistence.Model.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdvertisedSalary")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("date");

                    b.Property<int?>("CommuteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Location")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Note")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int>("ProcessStatusId")
                        .HasColumnType("int(10) unsigned");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("RoleTypeId")
                        .HasColumnType("int(10) unsigned");

                    b.Property<int>("SourceId")
                        .HasColumnType("int(10) unsigned");

                    b.Property<int>("StatusId")
                        .HasColumnType("int(10) unsigned");

                    b.Property<string>("Url")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CommuteId" }, "JobApplication_Commute_FK");

                    b.HasIndex(new[] { "ProcessStatusId" }, "JobApplication_ProcessStatus_FK");

                    b.HasIndex(new[] { "RoleTypeId" }, "JobApplication_RoleType_FK");

                    b.HasIndex(new[] { "SourceId" }, "JobApplication_Source_FK");

                    b.HasIndex(new[] { "StatusId" }, "JobApplication_Status_FK");

                    b.ToTable("JobApplication");
                });

            modelBuilder.Entity("Numployable.Persistence.Model.NextAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ActionNote")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("JobApplicationId")
                        .HasColumnType("int(10) unsigned");

                    b.Property<int>("NextActionTypeId")
                        .HasColumnType("int(10) unsigned");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "JobApplicationId" }, "NextAction_JobApplication_FK");

                    b.HasIndex(new[] { "NextActionTypeId" }, "NextAction_NextActionType_FK");

                    b.ToTable("NextAction");
                });

            modelBuilder.Entity("Numployable.Persistence.Model.NextActionType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(10) unsigned");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Description" }, "NextActionType_UNIQUE")
                        .IsUnique();

                    b.ToTable("NextActionType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Suggest time slots"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Initial call"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Interview"
                        });
                });

            modelBuilder.Entity("Numployable.Persistence.Model.ProcessStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(10) unsigned");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Description" }, "ApplicationProcessStatus_UNIQUE")
                        .IsUnique();

                    b.ToTable("ProcessStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Applied"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Interviewing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Waiting response"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Offer received"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Hired"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Rejected"
                        });
                });

            modelBuilder.Entity("Numployable.Persistence.Model.RoleType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(10) unsigned");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Description" }, "RoleType_UNIQUE")
                        .IsUnique();

                    b.ToTable("RoleType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Permanent"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Contract"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Part time"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Fixed-term contract"
                        });
                });

            modelBuilder.Entity("Numployable.Persistence.Model.Source", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(10) unsigned");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Description" }, "Source_UNIQUE")
                        .IsUnique();

                    b.ToTable("Source");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Job board"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Networking"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Recruiter contact"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Recruiting site"
                        });
                });

            modelBuilder.Entity("Numployable.Persistence.Model.Status", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(10) unsigned");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Description" }, "ApplicationStatus_UNIQUE")
                        .IsUnique();

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Expired"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Closed"
                        });
                });

            modelBuilder.Entity("Numployable.Persistence.Model.JobApplication", b =>
                {
                    b.HasOne("Numployable.Persistence.Model.Commute", "Commute")
                        .WithMany("JobApplication")
                        .HasForeignKey("CommuteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("JobApplication_Commute_FK");

                    b.HasOne("Numployable.Persistence.Model.ProcessStatus", "ProcessStatus")
                        .WithMany("JobApplication")
                        .HasForeignKey("ProcessStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("JobApplication_ProcessStatus_FK");

                    b.HasOne("Numployable.Persistence.Model.RoleType", "RoleType")
                        .WithMany("JobApplication")
                        .HasForeignKey("RoleTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("JobApplication_RoleType_FK");

                    b.HasOne("Numployable.Persistence.Model.Source", "Source")
                        .WithMany("JobApplication")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("JobApplication_Source_FK");

                    b.HasOne("Numployable.Persistence.Model.Status", "Status")
                        .WithMany("JobApplication")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("JobApplication_Status_FK");

                    b.Navigation("Commute");

                    b.Navigation("ProcessStatus");

                    b.Navigation("RoleType");

                    b.Navigation("Source");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Numployable.Persistence.Model.NextAction", b =>
                {
                    b.HasOne("Numployable.Persistence.Model.JobApplication", "JobApplication")
                        .WithMany("NextAction")
                        .HasForeignKey("JobApplicationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("NextAction_JobApplication_FK");

                    b.HasOne("Numployable.Persistence.Model.NextActionType", "NextActionType")
                        .WithMany("NextAction")
                        .HasForeignKey("NextActionTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("NextAction_NextActionType_FK");

                    b.Navigation("JobApplication");

                    b.Navigation("NextActionType");
                });

            modelBuilder.Entity("Numployable.Persistence.Model.Commute", b =>
                {
                    b.Navigation("JobApplication");
                });

            modelBuilder.Entity("Numployable.Persistence.Model.JobApplication", b =>
                {
                    b.Navigation("NextAction");
                });

            modelBuilder.Entity("Numployable.Persistence.Model.NextActionType", b =>
                {
                    b.Navigation("NextAction");
                });

            modelBuilder.Entity("Numployable.Persistence.Model.ProcessStatus", b =>
                {
                    b.Navigation("JobApplication");
                });

            modelBuilder.Entity("Numployable.Persistence.Model.RoleType", b =>
                {
                    b.Navigation("JobApplication");
                });

            modelBuilder.Entity("Numployable.Persistence.Model.Source", b =>
                {
                    b.Navigation("JobApplication");
                });

            modelBuilder.Entity("Numployable.Persistence.Model.Status", b =>
                {
                    b.Navigation("JobApplication");
                });
#pragma warning restore 612, 618
        }
    }
}
